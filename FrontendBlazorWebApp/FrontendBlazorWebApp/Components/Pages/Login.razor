@page "/signin"

@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Identity
@using FrontendBlazorWebApp.Data

@inject SignInManager<ApplicationUser> SignInManager
@inject ILogger<Login> Logger
@inject NavigationManager NavigationManager


<PageTitle>Sign in</PageTitle>


<section id="signin">
    <div class="container">
        @if (!string.IsNullOrEmpty(ErrorMessage))
        {
            <div id="form-error" class="alert alert-danger" role="alert">
                @ErrorMessage
            </div>
        }

        <EditForm Model="Input" asp-route-returnUrl="@ReturnUrl" method="post" OnValidSubmit="LoginUser" FormName="signin" novalidate>
            <DataAnnotationsValidator />

            <h1>Welcome Back</h1>
            <p>Don’t have an account yet? <a href="/signup">Sign up Here</a></p>
            <div class="content">
                <div id="form-email" class="input-group">
                    <label>Email</label>
                    <InputText type="email" @bind-Value="Input.Email" class="form-control" autocomplete="email" aria-required="true" placeholder="Enter your email address" />
                    <ValidationMessage For="() => Input.Email" />
                </div>
                <div id="form-password" class="input-group">
                    <label>Password</label>
                    <InputText type="password" @bind-Value="Input.Password" class="form-control" autocomplete="password" aria-required="true" placeholder="Enter your password" />
                    <ValidationMessage For="() => Input.Password" />
                </div>
                <div id="form-terms" class="checkbox">
                    <div class="checkbox-group">
                        <InputCheckbox @bind-Value="Input.RememberMe" class="form-control-checkbox" autocomplete="rememberme" />
                        <label>Remember me</label>
                    </div>
                </div>
                <button id="form-submit" class="btn-theme" type="submit">Sign in</button>
            </div>
        </EditForm>
    </div>
</section>

@code {
    private string? ErrorMessage { get; set; }

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (HttpMethods.IsGet(HttpContext.Request.Method))
        {
            await HttpContext.SignOutAsync(IdentityConstants.ExternalScheme);
        }
    }

    public async Task LoginUser()
    {
        var result = await SignInManager.PasswordSignInAsync(Input.Email, Input.Password, Input.RememberMe, lockoutOnFailure: false);
        if (result.Succeeded)
        {
            NavigationManager.NavigateTo(ReturnUrl ?? "/");
        }
        else
        {
            ErrorMessage = "Incorrect email or password.";
        }
    }

    private sealed class InputModel
    {
        [Required]
        [EmailAddress]
        public string Email { get; set; } = "";

        [Required]
        [DataType(DataType.Password)]
        public string Password { get; set; } = "";

        [Display(Name = "Remember me?")]
        public bool RememberMe { get; set; }
    }
}
